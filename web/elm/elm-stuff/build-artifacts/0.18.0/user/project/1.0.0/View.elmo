var _user$project$View$playbackSpeedSlider = function (model) {
	return A2(
		_elm_lang$html$Html$div,
		{
			ctor: '::',
			_0: _user$project$Styles$navItemStyle(model.navMenuOpen),
			_1: {
				ctor: '::',
				_0: _elm_lang$html$Html_Attributes$style(
					{
						ctor: '::',
						_0: A2(_user$project$Logic_Utils_ops['=>'], 'marginTop', '100px'),
						_1: {ctor: '[]'}
					}),
				_1: {ctor: '[]'}
			}
		},
		{
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$div,
				{ctor: '[]'},
				{
					ctor: '::',
					_0: _elm_lang$html$Html$text(
						A2(
							_elm_lang$core$Basics_ops['++'],
							'+ ',
							A2(_elm_lang$core$Basics_ops['++'], 'AUDIO SPEED', ' -'))),
					_1: {ctor: '[]'}
				}),
			_1: {
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$input,
					{
						ctor: '::',
						_0: _elm_lang$html$Html_Attributes$type_('range'),
						_1: {
							ctor: '::',
							_0: _elm_lang$html$Html_Attributes$min('1'),
							_1: {
								ctor: '::',
								_0: _elm_lang$html$Html_Attributes$max('10'),
								_1: {
									ctor: '::',
									_0: _elm_lang$html$Html_Attributes$value(
										_elm_lang$core$Basics$toString(model.sliderValue)),
									_1: {
										ctor: '::',
										_0: _elm_lang$html$Html_Events$onInput(_user$project$Types$ChangeSliderValue),
										_1: {ctor: '[]'}
									}
								}
							}
						}
					},
					{ctor: '[]'}),
				_1: {ctor: '[]'}
			}
		});
};
var _user$project$View$notFoundPage = A2(
	_elm_lang$html$Html$h1,
	{
		ctor: '::',
		_0: _elm_lang$html$Html_Attributes$style(
			{
				ctor: '::',
				_0: A2(_user$project$Logic_Utils_ops['=>'], 'margin', '100px 300px'),
				_1: {
					ctor: '::',
					_0: A2(_user$project$Logic_Utils_ops['=>'], 'color', '#03a9f4'),
					_1: {ctor: '[]'}
				}
			}),
		_1: {ctor: '[]'}
	},
	{
		ctor: '::',
		_0: _elm_lang$html$Html$text('Page Not Found! '),
		_1: {ctor: '[]'}
	});
var _user$project$View$page = function (model) {
	var _p0 = model.route;
	switch (_p0.ctor) {
		case 'ChordsPage':
			return A2(
				_elm_lang$html$Html$map,
				_user$project$Types$ChordsMsg,
				_user$project$Chords_View$chordsPage(model.chords));
		case 'FretboardPage':
			return A2(
				_elm_lang$html$Html$map,
				_user$project$Types$FretboardMsg,
				_user$project$Fretboard_View$fretboardPage(model.fretboard));
		case 'ScalesPage':
			return A2(
				_elm_lang$html$Html$map,
				_user$project$Types$ScalesMsg,
				_user$project$Scales_View$scalesPage(model.scales));
		case 'HomePage':
			return A2(
				_elm_lang$html$Html$map,
				_user$project$Types$ChordsMsg,
				_user$project$Home_View$homePage(model.chords));
		case 'StrummingPage':
			return A2(
				_elm_lang$html$Html$map,
				_user$project$Types$StrumMsg,
				_user$project$Strum_View$strummingPage(model.strum));
		case 'FingerPickingPage':
			return A2(
				_elm_lang$html$Html$map,
				_user$project$Types$FingerpickMsg,
				_user$project$Fingerpick_View$fingerPickingPage(model.fingerpick));
		default:
			return _user$project$View$notFoundPage;
	}
};
var _user$project$View$signature = function (bool) {
	return A2(
		_elm_lang$html$Html$div,
		{
			ctor: '::',
			_0: _user$project$Styles$navItemStyle(bool),
			_1: {
				ctor: '::',
				_0: _user$project$Styles$signatureStyle,
				_1: {ctor: '[]'}
			}
		},
		{
			ctor: '::',
			_0: A4(
				_jinjor$elm_inline_hover$InlineHover$hover,
				_user$project$Styles$highlight,
				_elm_lang$html$Html$a,
				{
					ctor: '::',
					_0: _elm_lang$html$Html_Attributes$href('https://www.github.com/fedreg'),
					_1: {
						ctor: '::',
						_0: _elm_lang$html$Html_Attributes$style(
							{
								ctor: '::',
								_0: A2(_user$project$Logic_Utils_ops['=>'], 'color', '#666'),
								_1: {ctor: '[]'}
							}),
						_1: {ctor: '[]'}
					}
				},
				{
					ctor: '::',
					_0: _elm_lang$html$Html$text('c. 2017 FedReg (v. 0.1)'),
					_1: {ctor: '[]'}
				}),
			_1: {ctor: '[]'}
		});
};
var _user$project$View$keyListView = function (model) {
	var keyOptions = function (key) {
		return _elm_lang$core$Native_Utils.eq(key, model.musKey) ? A2(
			_elm_lang$html$Html$span,
			{
				ctor: '::',
				_0: _user$project$Styles$keyListStyle,
				_1: {
					ctor: '::',
					_0: _elm_lang$html$Html_Events$onClick(
						_user$project$Types$ChangeKey(key)),
					_1: {
						ctor: '::',
						_0: _elm_lang$html$Html_Attributes$style(
							{
								ctor: '::',
								_0: A2(_user$project$Logic_Utils_ops['=>'], 'border', '1px solid #03a9f4'),
								_1: {
									ctor: '::',
									_0: A2(_user$project$Logic_Utils_ops['=>'], 'color', '#03a9f4'),
									_1: {ctor: '[]'}
								}
							}),
						_1: {ctor: '[]'}
					}
				}
			},
			{
				ctor: '::',
				_0: _elm_lang$html$Html$text(key),
				_1: {ctor: '[]'}
			}) : A2(
			_elm_lang$html$Html$span,
			{
				ctor: '::',
				_0: _user$project$Styles$keyListStyle,
				_1: {
					ctor: '::',
					_0: _elm_lang$html$Html_Events$onClick(
						_user$project$Types$ChangeKey(key)),
					_1: {
						ctor: '::',
						_0: _elm_lang$html$Html_Attributes$style(
							{
								ctor: '::',
								_0: A2(_user$project$Logic_Utils_ops['=>'], 'border', '1px solid #333'),
								_1: {
									ctor: '::',
									_0: A2(_user$project$Logic_Utils_ops['=>'], 'color', '#fff'),
									_1: {ctor: '[]'}
								}
							}),
						_1: {ctor: '[]'}
					}
				}
			},
			{
				ctor: '::',
				_0: _elm_lang$html$Html$text(key),
				_1: {ctor: '[]'}
			});
	};
	return A2(
		_elm_lang$html$Html$div,
		{
			ctor: '::',
			_0: _user$project$Styles$keyListContainerStyle(model.navMenuOpen),
			_1: {ctor: '[]'}
		},
		{
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$h3,
				{
					ctor: '::',
					_0: _user$project$Styles$keyListKeyTitleStyle,
					_1: {ctor: '[]'}
				},
				{
					ctor: '::',
					_0: _elm_lang$html$Html$text('SELECT KEY'),
					_1: {ctor: '[]'}
				}),
			_1: {
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$div,
					{
						ctor: '::',
						_0: _user$project$Styles$textContainerStyle,
						_1: {ctor: '[]'}
					},
					A2(_elm_lang$core$List$map, keyOptions, _user$project$Chords_View$keyListMajor)),
				_1: {
					ctor: '::',
					_0: A2(
						_elm_lang$html$Html$div,
						{
							ctor: '::',
							_0: _user$project$Styles$textContainerStyle,
							_1: {ctor: '[]'}
						},
						A2(_elm_lang$core$List$map, keyOptions, _user$project$Chords_View$keyListMinor)),
					_1: {ctor: '[]'}
				}
			}
		});
};
var _user$project$View$navIcon = function (model) {
	return A2(
		_elm_lang$html$Html$div,
		{
			ctor: '::',
			_0: _user$project$Styles$navIconStyle(model),
			_1: {
				ctor: '::',
				_0: _elm_lang$html$Html_Events$onClick(_user$project$Types$ShowNavMenu),
				_1: {ctor: '[]'}
			}
		},
		{
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$hr,
				{
					ctor: '::',
					_0: _user$project$Styles$navIconStyleHr(model.navMenuOpen),
					_1: {ctor: '[]'}
				},
				{ctor: '[]'}),
			_1: {
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$hr,
					{
						ctor: '::',
						_0: _user$project$Styles$navIconStyleHr(model.navMenuOpen),
						_1: {ctor: '[]'}
					},
					{ctor: '[]'}),
				_1: {
					ctor: '::',
					_0: A2(
						_elm_lang$html$Html$hr,
						{
							ctor: '::',
							_0: _user$project$Styles$navIconStyleHr(model.navMenuOpen),
							_1: {ctor: '[]'}
						},
						{ctor: '[]'}),
					_1: {ctor: '[]'}
				}
			}
		});
};
var _user$project$View$pathList = function (model) {
	return {
		ctor: '::',
		_0: _user$project$Logic_Routing$homePath,
		_1: {
			ctor: '::',
			_0: _user$project$Logic_Routing$chordsPath(model.musKey),
			_1: {
				ctor: '::',
				_0: _user$project$Logic_Routing$scalesPath(model.musKey),
				_1: {
					ctor: '::',
					_0: _user$project$Logic_Routing$fretboardPath(model.musKey),
					_1: {
						ctor: '::',
						_0: _user$project$Logic_Routing$strummingPath,
						_1: {
							ctor: '::',
							_0: _user$project$Logic_Routing$fingerPickingPath,
							_1: {ctor: '[]'}
						}
					}
				}
			}
		}
	};
};
var _user$project$View$pageList = {
	ctor: '::',
	_0: 'HOME',
	_1: {
		ctor: '::',
		_0: 'CHORDS',
		_1: {
			ctor: '::',
			_0: 'SCALES',
			_1: {
				ctor: '::',
				_0: 'FRETBOARD',
				_1: {
					ctor: '::',
					_0: 'STRUMMING',
					_1: {
						ctor: '::',
						_0: 'FINGERPICKING',
						_1: {ctor: '[]'}
					}
				}
			}
		}
	}
};
var _user$project$View$nav = function (model) {
	var navItem = F2(
		function (rte, page) {
			return _elm_lang$core$Native_Utils.eq(
				A2(
					_elm_lang$core$String$startsWith,
					page,
					_elm_lang$core$String$toUpper(
						_elm_lang$core$Basics$toString(model.route))),
				true) ? A2(
				_elm_lang$html$Html$a,
				{
					ctor: '::',
					_0: _elm_lang$html$Html_Events$onClick(
						_user$project$Types$NewUrl(rte)),
					_1: {
						ctor: '::',
						_0: _user$project$Styles$navItemStyle(model.navMenuOpen),
						_1: {
							ctor: '::',
							_0: _elm_lang$html$Html_Attributes$style(
								{
									ctor: '::',
									_0: A2(_user$project$Logic_Utils_ops['=>'], 'color', '#03a9f4'),
									_1: {ctor: '[]'}
								}),
							_1: {ctor: '[]'}
						}
					}
				},
				{
					ctor: '::',
					_0: _elm_lang$html$Html$text(page),
					_1: {ctor: '[]'}
				}) : A2(
				_elm_lang$html$Html$a,
				{
					ctor: '::',
					_0: _elm_lang$html$Html_Events$onClick(
						_user$project$Types$NewUrl(rte)),
					_1: {
						ctor: '::',
						_0: _user$project$Styles$navItemStyle(model.navMenuOpen),
						_1: {ctor: '[]'}
					}
				},
				{
					ctor: '::',
					_0: _elm_lang$html$Html$text(page),
					_1: {ctor: '[]'}
				});
		});
	return A2(
		_elm_lang$html$Html$div,
		{
			ctor: '::',
			_0: _user$project$Styles$navMenuStyle(model),
			_1: {ctor: '[]'}
		},
		{
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$div,
				{
					ctor: '::',
					_0: _user$project$Styles$navTitleStyle,
					_1: {ctor: '[]'}
				},
				{
					ctor: '::',
					_0: _elm_lang$html$Html$text('Fret Theory'),
					_1: {ctor: '[]'}
				}),
			_1: {
				ctor: '::',
				_0: _user$project$View$navIcon(model),
				_1: {
					ctor: '::',
					_0: _user$project$Modal_View$modalIcon(model),
					_1: {
						ctor: '::',
						_0: A2(
							_elm_lang$html$Html$div,
							{ctor: '[]'},
							A3(
								_elm_lang$core$List$map2,
								navItem,
								_user$project$View$pathList(model),
								_user$project$View$pageList)),
						_1: {
							ctor: '::',
							_0: _user$project$View$playbackSpeedSlider(model),
							_1: {
								ctor: '::',
								_0: A2(
									_elm_lang$html$Html$div,
									{
										ctor: '::',
										_0: _elm_lang$html$Html_Attributes$style(
											{
												ctor: '::',
												_0: A2(_user$project$Logic_Utils_ops['=>'], 'position', 'relative'),
												_1: {ctor: '[]'}
											}),
										_1: {ctor: '[]'}
									},
									{
										ctor: '::',
										_0: _user$project$View$keyListView(model),
										_1: {ctor: '[]'}
									}),
								_1: {
									ctor: '::',
									_0: _user$project$View$signature(model.navMenuOpen),
									_1: {ctor: '[]'}
								}
							}
						}
					}
				}
			}
		});
};
var _user$project$View$mainView = function (model) {
	return A2(
		_elm_lang$html$Html$div,
		{
			ctor: '::',
			_0: _elm_lang$html$Html_Attributes$style(
				{
					ctor: '::',
					_0: A2(_user$project$Logic_Utils_ops['=>'], 'position', 'relative'),
					_1: {
						ctor: '::',
						_0: A2(_user$project$Logic_Utils_ops['=>'], 'overflow', 'hidden'),
						_1: {
							ctor: '::',
							_0: A2(_user$project$Logic_Utils_ops['=>'], 'padding', '5px'),
							_1: {ctor: '[]'}
						}
					}
				}),
			_1: {ctor: '[]'}
		},
		{
			ctor: '::',
			_0: _user$project$View$nav(model),
			_1: {
				ctor: '::',
				_0: _user$project$View$page(model),
				_1: {
					ctor: '::',
					_0: _user$project$Modal_View$modal(model),
					_1: {ctor: '[]'}
				}
			}
		});
};
