var _user$project$Main$subscriptions = function (model) {
	return _elm_lang$core$Platform_Sub$batch(
		{
			ctor: '::',
			_0: function () {
				var val = _elm_lang$core$Basics$toFloat(model.sliderValue) / 10.0;
				return (_elm_lang$core$Native_Utils.cmp(
					model.index,
					_elm_lang$core$List$length(model.currentChord)) < 0) ? A2(
					_elm_lang$core$Time$every,
					val * _elm_lang$core$Time$second,
					_elm_lang$core$Basics$always(_user$project$Logic_Types$SendNotes)) : _elm_lang$core$Platform_Sub$none;
			}(),
			_1: {
				ctor: '::',
				_0: A2(_fbonetti$elm_phoenix_socket$Phoenix_Socket$listen, model.phxSocket, _user$project$Logic_Types$PhoenixMsg),
				_1: {ctor: '[]'}
			}
		});
};
var _user$project$Main$initPhoenixSocket = A4(
	_fbonetti$elm_phoenix_socket$Phoenix_Socket$on,
	'chord_select',
	'chordChannel:chords',
	_user$project$Logic_Types$ReceiveMessage,
	_fbonetti$elm_phoenix_socket$Phoenix_Socket$withDebug(
		_fbonetti$elm_phoenix_socket$Phoenix_Socket$init('wss://damp-wave-74595.herokuapp.com/socket/websocket')));
var _user$project$Main$initFingerPickPattern = {
	a: {
		ctor: '::',
		_0: 2,
		_1: {
			ctor: '::',
			_0: 0,
			_1: {
				ctor: '::',
				_0: 0,
				_1: {
					ctor: '::',
					_0: 3,
					_1: {
						ctor: '::',
						_0: 0,
						_1: {
							ctor: '::',
							_0: 1,
							_1: {
								ctor: '::',
								_0: 0,
								_1: {
									ctor: '::',
									_0: 2,
									_1: {ctor: '[]'}
								}
							}
						}
					}
				}
			}
		}
	},
	b: {
		ctor: '::',
		_0: 5,
		_1: {
			ctor: '::',
			_0: 0,
			_1: {
				ctor: '::',
				_0: 4,
				_1: {
					ctor: '::',
					_0: 0,
					_1: {
						ctor: '::',
						_0: 5,
						_1: {
							ctor: '::',
							_0: 0,
							_1: {
								ctor: '::',
								_0: 5,
								_1: {
									ctor: '::',
									_0: 0,
									_1: {ctor: '[]'}
								}
							}
						}
					}
				}
			}
		}
	}
};
var _user$project$Main$initStrumArrows = {
	ctor: '::',
	_0: {
		ctor: '::',
		_0: 1,
		_1: {
			ctor: '::',
			_0: 2,
			_1: {
				ctor: '::',
				_0: 1,
				_1: {
					ctor: '::',
					_0: 1,
					_1: {
						ctor: '::',
						_0: 2,
						_1: {
							ctor: '::',
							_0: 1,
							_1: {
								ctor: '::',
								_0: 1,
								_1: {
									ctor: '::',
									_0: 1,
									_1: {ctor: '[]'}
								}
							}
						}
					}
				}
			}
		}
	},
	_1: {
		ctor: '::',
		_0: {
			ctor: '::',
			_0: 1,
			_1: {
				ctor: '::',
				_0: 2,
				_1: {
					ctor: '::',
					_0: 1,
					_1: {
						ctor: '::',
						_0: 1,
						_1: {
							ctor: '::',
							_0: 2,
							_1: {
								ctor: '::',
								_0: 1,
								_1: {
									ctor: '::',
									_0: 1,
									_1: {
										ctor: '::',
										_0: 1,
										_1: {ctor: '[]'}
									}
								}
							}
						}
					}
				}
			}
		},
		_1: {
			ctor: '::',
			_0: {
				ctor: '::',
				_0: 1,
				_1: {
					ctor: '::',
					_0: 2,
					_1: {
						ctor: '::',
						_0: 1,
						_1: {
							ctor: '::',
							_0: 1,
							_1: {
								ctor: '::',
								_0: 2,
								_1: {
									ctor: '::',
									_0: 1,
									_1: {
										ctor: '::',
										_0: 1,
										_1: {
											ctor: '::',
											_0: 1,
											_1: {ctor: '[]'}
										}
									}
								}
							}
						}
					}
				}
			},
			_1: {
				ctor: '::',
				_0: {
					ctor: '::',
					_0: 1,
					_1: {
						ctor: '::',
						_0: 2,
						_1: {
							ctor: '::',
							_0: 1,
							_1: {
								ctor: '::',
								_0: 1,
								_1: {
									ctor: '::',
									_0: 2,
									_1: {
										ctor: '::',
										_0: 1,
										_1: {
											ctor: '::',
											_0: 1,
											_1: {
												ctor: '::',
												_0: 1,
												_1: {ctor: '[]'}
											}
										}
									}
								}
							}
						}
					}
				},
				_1: {ctor: '[]'}
			}
		}
	}
};
var _user$project$Main$init = function (location) {
	var currentRoute = _user$project$Logic_Routing$parseLocation(location);
	return {
		ctor: '_Tuple2',
		_0: {
			route: currentRoute,
			musKey: 'C',
			index: 6,
			currentChord: {ctor: '[]'},
			displayedChords: _user$project$Views_Chords$startKey,
			notePosition: 80.0,
			showAccidental: '0',
			sliderValue: 1,
			navMenuOpen: false,
			pitchShift: 0,
			modalOpen: false,
			strumGroupNumber: '1',
			strumArrow: _user$project$Main$initStrumArrows,
			fingerPickPattern: _user$project$Main$initFingerPickPattern,
			phxSocket: _user$project$Main$initPhoenixSocket
		},
		_1: _user$project$Logic_Update$joinChannel
	};
};
var _user$project$Main$main = A2(
	_elm_lang$navigation$Navigation$program,
	_user$project$Logic_Types$OnLocationChange,
	{init: _user$project$Main$init, update: _user$project$Logic_Update$update, view: _user$project$Views_MainViews$mainView, subscriptions: _user$project$Main$subscriptions})();
