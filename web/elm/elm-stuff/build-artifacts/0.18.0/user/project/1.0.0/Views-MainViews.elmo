var _user$project$Views_MainViews$playbackSpeedSlider = function (val) {
	return A2(
		_elm_lang$html$Html$div,
		{
			ctor: '::',
			_0: _user$project$Styles_MainStyles$navItemStyle,
			_1: {
				ctor: '::',
				_0: _elm_lang$html$Html_Attributes$style(
					{
						ctor: '::',
						_0: {ctor: '_Tuple2', _0: 'marginTop', _1: '25px'},
						_1: {ctor: '[]'}
					}),
				_1: {ctor: '[]'}
			}
		},
		{
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$div,
				{ctor: '[]'},
				{
					ctor: '::',
					_0: _elm_lang$html$Html$text(
						A2(
							_elm_lang$core$Basics_ops['++'],
							'+ ',
							A2(_elm_lang$core$Basics_ops['++'], 'AUDIO SPEED', ' -'))),
					_1: {ctor: '[]'}
				}),
			_1: {
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$input,
					{
						ctor: '::',
						_0: _elm_lang$html$Html_Attributes$type_('range'),
						_1: {
							ctor: '::',
							_0: _elm_lang$html$Html_Attributes$min('1'),
							_1: {
								ctor: '::',
								_0: _elm_lang$html$Html_Attributes$max('10'),
								_1: {
									ctor: '::',
									_0: _elm_lang$html$Html_Attributes$value(
										_elm_lang$core$Basics$toString(val)),
									_1: {
										ctor: '::',
										_0: _elm_lang$html$Html_Events$onInput(_user$project$Logic_Types$ChangeSliderValue),
										_1: {ctor: '[]'}
									}
								}
							}
						}
					},
					{ctor: '[]'}),
				_1: {ctor: '[]'}
			}
		});
};
var _user$project$Views_MainViews$page = function (model) {
	var _p0 = model.route;
	switch (_p0.ctor) {
		case 'ChordChartPage':
			return _user$project$Views_Chords$chordChartPage(model);
		case 'FretboardPage':
			return _user$project$Views_Fretboard$fretboardPage(model);
		case 'ScalesPage':
			return _user$project$Views_Scales$scalesPage(model);
		case 'HomePage':
			return _user$project$Views_Home$homePage(model);
		case 'StrumPage':
			return _user$project$Views_Strum$strumPage(model);
		case 'FingerPickingPage':
			return _user$project$Views_FingerPick$fingerPickingPage(model);
		default:
			return A2(
				_elm_lang$html$Html$div,
				{
					ctor: '::',
					_0: _elm_lang$html$Html_Attributes$style(
						{
							ctor: '::',
							_0: {ctor: '_Tuple2', _0: 'margin', _1: '100px auto'},
							_1: {
								ctor: '::',
								_0: {ctor: '_Tuple2', _0: 'color', _1: '#E91750'},
								_1: {ctor: '[]'}
							}
						}),
					_1: {ctor: '[]'}
				},
				{
					ctor: '::',
					_0: _elm_lang$html$Html$text(
						A2(_elm_lang$core$Basics_ops['++'], 'Page Not Found ', model.musKey)),
					_1: {ctor: '[]'}
				});
	}
};
var _user$project$Views_MainViews$signature = A2(
	_elm_lang$html$Html$div,
	{
		ctor: '::',
		_0: _user$project$Styles_MainStyles$signatureStyle,
		_1: {ctor: '[]'}
	},
	{
		ctor: '::',
		_0: A4(
			_jinjor$elm_inline_hover$InlineHover$hover,
			_user$project$Styles_MainStyles$highlight,
			_elm_lang$html$Html$a,
			{
				ctor: '::',
				_0: _elm_lang$html$Html_Attributes$href('https://www.github.com/fedreg'),
				_1: {
					ctor: '::',
					_0: _elm_lang$html$Html_Attributes$style(
						{
							ctor: '::',
							_0: {ctor: '_Tuple2', _0: 'color', _1: '#000'},
							_1: {ctor: '[]'}
						}),
					_1: {ctor: '[]'}
				}
			},
			{
				ctor: '::',
				_0: _elm_lang$html$Html$text('Built 2017 by FedReg (v. 0.1)'),
				_1: {ctor: '[]'}
			}),
		_1: {ctor: '[]'}
	});
var _user$project$Views_MainViews$keyListView = function (model) {
	var keyOptions = function (key) {
		return _elm_lang$core$Native_Utils.eq(key, model.musKey) ? A2(
			_elm_lang$html$Html$span,
			{
				ctor: '::',
				_0: _user$project$Styles_MainStyles$keyListStyle(model.navMenuOpen),
				_1: {
					ctor: '::',
					_0: _elm_lang$html$Html_Events$onClick(
						_user$project$Logic_Types$ChangeKey(key)),
					_1: {
						ctor: '::',
						_0: _elm_lang$html$Html_Attributes$style(
							{
								ctor: '::',
								_0: {ctor: '_Tuple2', _0: 'color', _1: '#E91750'},
								_1: {ctor: '[]'}
							}),
						_1: {ctor: '[]'}
					}
				}
			},
			{
				ctor: '::',
				_0: _elm_lang$html$Html$text(key),
				_1: {ctor: '[]'}
			}) : A2(
			_elm_lang$html$Html$span,
			{
				ctor: '::',
				_0: _user$project$Styles_MainStyles$keyListStyle(model.navMenuOpen),
				_1: {
					ctor: '::',
					_0: _elm_lang$html$Html_Events$onClick(
						_user$project$Logic_Types$ChangeKey(key)),
					_1: {
						ctor: '::',
						_0: _elm_lang$html$Html_Attributes$style(
							{
								ctor: '::',
								_0: {ctor: '_Tuple2', _0: 'color', _1: '#fff'},
								_1: {ctor: '[]'}
							}),
						_1: {ctor: '[]'}
					}
				}
			},
			{
				ctor: '::',
				_0: _elm_lang$html$Html$text(key),
				_1: {ctor: '[]'}
			});
	};
	return A2(
		_elm_lang$html$Html$div,
		{
			ctor: '::',
			_0: _user$project$Styles_MainStyles$keyListContainerStyle(model.navMenuOpen),
			_1: {ctor: '[]'}
		},
		{
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$div,
				{
					ctor: '::',
					_0: _user$project$Styles_MainStyles$textContainerStyle(model.navMenuOpen),
					_1: {ctor: '[]'}
				},
				A2(_elm_lang$core$List$map, keyOptions, _user$project$Views_Chords$keyList)),
			_1: {ctor: '[]'}
		});
};
var _user$project$Views_MainViews$navIcon = function (model) {
	return A2(
		_elm_lang$html$Html$div,
		{
			ctor: '::',
			_0: _user$project$Styles_MainStyles$navIconStyle(model),
			_1: {
				ctor: '::',
				_0: _elm_lang$html$Html_Events$onClick(_user$project$Logic_Types$ShowNavMenu),
				_1: {ctor: '[]'}
			}
		},
		{
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$hr,
				{
					ctor: '::',
					_0: _user$project$Styles_MainStyles$navIconStyleHr,
					_1: {ctor: '[]'}
				},
				{ctor: '[]'}),
			_1: {
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$hr,
					{
						ctor: '::',
						_0: _user$project$Styles_MainStyles$navIconStyleHr,
						_1: {ctor: '[]'}
					},
					{ctor: '[]'}),
				_1: {
					ctor: '::',
					_0: A2(
						_elm_lang$html$Html$hr,
						{
							ctor: '::',
							_0: _user$project$Styles_MainStyles$navIconStyleHr,
							_1: {ctor: '[]'}
						},
						{ctor: '[]'}),
					_1: {ctor: '[]'}
				}
			}
		});
};
var _user$project$Views_MainViews$nav = function (model) {
	return A2(
		_elm_lang$html$Html$div,
		{
			ctor: '::',
			_0: _user$project$Styles_MainStyles$navMenuStyle(model),
			_1: {ctor: '[]'}
		},
		{
			ctor: '::',
			_0: _user$project$Views_MainViews$navIcon(model),
			_1: {
				ctor: '::',
				_0: _user$project$Views_Modal$modalIcon(model),
				_1: {
					ctor: '::',
					_0: A2(
						_elm_lang$html$Html$div,
						{ctor: '[]'},
						{
							ctor: '::',
							_0: A4(
								_jinjor$elm_inline_hover$InlineHover$hover,
								_user$project$Styles_MainStyles$highlight,
								_elm_lang$html$Html$a,
								{
									ctor: '::',
									_0: _elm_lang$html$Html_Events$onClick(
										_user$project$Logic_Types$NewUrl(_user$project$Logic_Routing$homePath)),
									_1: {
										ctor: '::',
										_0: _user$project$Styles_MainStyles$navItemStyle,
										_1: {ctor: '[]'}
									}
								},
								{
									ctor: '::',
									_0: _elm_lang$html$Html$text('HOME'),
									_1: {ctor: '[]'}
								}),
							_1: {
								ctor: '::',
								_0: A4(
									_jinjor$elm_inline_hover$InlineHover$hover,
									_user$project$Styles_MainStyles$highlight,
									_elm_lang$html$Html$a,
									{
										ctor: '::',
										_0: _elm_lang$html$Html_Events$onClick(
											_user$project$Logic_Types$NewUrl(
												_user$project$Logic_Routing$chordsPath(model.musKey))),
										_1: {
											ctor: '::',
											_0: _user$project$Styles_MainStyles$navItemStyle,
											_1: {ctor: '[]'}
										}
									},
									{
										ctor: '::',
										_0: _elm_lang$html$Html$text('CHORDS'),
										_1: {ctor: '[]'}
									}),
								_1: {
									ctor: '::',
									_0: A4(
										_jinjor$elm_inline_hover$InlineHover$hover,
										_user$project$Styles_MainStyles$highlight,
										_elm_lang$html$Html$a,
										{
											ctor: '::',
											_0: _elm_lang$html$Html_Events$onClick(
												_user$project$Logic_Types$NewUrl(
													_user$project$Logic_Routing$scalesPath(model.musKey))),
											_1: {
												ctor: '::',
												_0: _user$project$Styles_MainStyles$navItemStyle,
												_1: {ctor: '[]'}
											}
										},
										{
											ctor: '::',
											_0: _elm_lang$html$Html$text('SCALES'),
											_1: {ctor: '[]'}
										}),
									_1: {
										ctor: '::',
										_0: A4(
											_jinjor$elm_inline_hover$InlineHover$hover,
											_user$project$Styles_MainStyles$highlight,
											_elm_lang$html$Html$a,
											{
												ctor: '::',
												_0: _elm_lang$html$Html_Events$onClick(
													_user$project$Logic_Types$NewUrl(
														_user$project$Logic_Routing$fretboardPath(model.musKey))),
												_1: {
													ctor: '::',
													_0: _user$project$Styles_MainStyles$navItemStyle,
													_1: {ctor: '[]'}
												}
											},
											{
												ctor: '::',
												_0: _elm_lang$html$Html$text('FRETBOARD'),
												_1: {ctor: '[]'}
											}),
										_1: {
											ctor: '::',
											_0: A4(
												_jinjor$elm_inline_hover$InlineHover$hover,
												_user$project$Styles_MainStyles$highlight,
												_elm_lang$html$Html$a,
												{
													ctor: '::',
													_0: _elm_lang$html$Html_Events$onClick(
														_user$project$Logic_Types$NewUrl(_user$project$Logic_Routing$strumPath)),
													_1: {
														ctor: '::',
														_0: _user$project$Styles_MainStyles$navItemStyle,
														_1: {ctor: '[]'}
													}
												},
												{
													ctor: '::',
													_0: _elm_lang$html$Html$text('STRUMMING'),
													_1: {ctor: '[]'}
												}),
											_1: {
												ctor: '::',
												_0: A4(
													_jinjor$elm_inline_hover$InlineHover$hover,
													_user$project$Styles_MainStyles$highlight,
													_elm_lang$html$Html$a,
													{
														ctor: '::',
														_0: _elm_lang$html$Html_Events$onClick(
															_user$project$Logic_Types$NewUrl(_user$project$Logic_Routing$fingerPickingPath)),
														_1: {
															ctor: '::',
															_0: _user$project$Styles_MainStyles$navItemStyle,
															_1: {ctor: '[]'}
														}
													},
													{
														ctor: '::',
														_0: _elm_lang$html$Html$text('FINGERPICKING'),
														_1: {ctor: '[]'}
													}),
												_1: {
													ctor: '::',
													_0: _user$project$Views_MainViews$playbackSpeedSlider(model.sliderValue),
													_1: {
														ctor: '::',
														_0: A2(
															_elm_lang$html$Html$div,
															{
																ctor: '::',
																_0: _user$project$Styles_MainStyles$navItemStyle,
																_1: {
																	ctor: '::',
																	_0: _elm_lang$html$Html_Attributes$style(
																		{
																			ctor: '::',
																			_0: {ctor: '_Tuple2', _0: 'color', _1: '#E91750'},
																			_1: {ctor: '[]'}
																		}),
																	_1: {ctor: '[]'}
																}
															},
															{
																ctor: '::',
																_0: _elm_lang$html$Html$text('SELECT KEY:'),
																_1: {ctor: '[]'}
															}),
														_1: {
															ctor: '::',
															_0: A2(
																_elm_lang$html$Html$div,
																{
																	ctor: '::',
																	_0: _elm_lang$html$Html_Attributes$style(
																		{
																			ctor: '::',
																			_0: {ctor: '_Tuple2', _0: 'position', _1: 'relative'},
																			_1: {ctor: '[]'}
																		}),
																	_1: {ctor: '[]'}
																},
																{
																	ctor: '::',
																	_0: _user$project$Views_MainViews$keyListView(model),
																	_1: {ctor: '[]'}
																}),
															_1: {
																ctor: '::',
																_0: _user$project$Views_MainViews$signature,
																_1: {ctor: '[]'}
															}
														}
													}
												}
											}
										}
									}
								}
							}
						}),
					_1: {ctor: '[]'}
				}
			}
		});
};
var _user$project$Views_MainViews$mainView = function (model) {
	return A2(
		_elm_lang$html$Html$div,
		{
			ctor: '::',
			_0: _elm_lang$html$Html_Attributes$style(
				{
					ctor: '::',
					_0: {ctor: '_Tuple2', _0: 'position', _1: 'relative'},
					_1: {
						ctor: '::',
						_0: {ctor: '_Tuple2', _0: 'overflow', _1: 'hidden'},
						_1: {
							ctor: '::',
							_0: {ctor: '_Tuple2', _0: 'padding', _1: '5px'},
							_1: {ctor: '[]'}
						}
					}
				}),
			_1: {ctor: '[]'}
		},
		{
			ctor: '::',
			_0: _user$project$Views_MainViews$nav(model),
			_1: {
				ctor: '::',
				_0: _user$project$Views_MainViews$page(model),
				_1: {
					ctor: '::',
					_0: _user$project$Views_Modal$modal(model),
					_1: {ctor: '[]'}
				}
			}
		});
};
