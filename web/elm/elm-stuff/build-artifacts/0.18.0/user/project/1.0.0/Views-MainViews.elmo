var _user$project$Views_MainViews$playbackSpeedSlider = function (model) {
	return A2(
		_elm_lang$html$Html$div,
		{
			ctor: '::',
			_0: _user$project$Styles_MainStyles$navItemStyle(model.navMenuOpen),
			_1: {
				ctor: '::',
				_0: _elm_lang$html$Html_Attributes$style(
					{
						ctor: '::',
						_0: {ctor: '_Tuple2', _0: 'marginTop', _1: '100px'},
						_1: {ctor: '[]'}
					}),
				_1: {ctor: '[]'}
			}
		},
		{
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$div,
				{ctor: '[]'},
				{
					ctor: '::',
					_0: _elm_lang$html$Html$text(
						A2(
							_elm_lang$core$Basics_ops['++'],
							'+ ',
							A2(_elm_lang$core$Basics_ops['++'], 'AUDIO SPEED', ' -'))),
					_1: {ctor: '[]'}
				}),
			_1: {
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$input,
					{
						ctor: '::',
						_0: _elm_lang$html$Html_Attributes$type_('range'),
						_1: {
							ctor: '::',
							_0: _elm_lang$html$Html_Attributes$min('1'),
							_1: {
								ctor: '::',
								_0: _elm_lang$html$Html_Attributes$max('10'),
								_1: {
									ctor: '::',
									_0: _elm_lang$html$Html_Attributes$value(
										_elm_lang$core$Basics$toString(model.sliderValue)),
									_1: {
										ctor: '::',
										_0: _elm_lang$html$Html_Events$onInput(_user$project$Logic_Types$ChangeSliderValue),
										_1: {ctor: '[]'}
									}
								}
							}
						}
					},
					{ctor: '[]'}),
				_1: {ctor: '[]'}
			}
		});
};
var _user$project$Views_MainViews$notFoundPage = A2(
	_elm_lang$html$Html$h1,
	{
		ctor: '::',
		_0: _elm_lang$html$Html_Attributes$style(
			{
				ctor: '::',
				_0: {ctor: '_Tuple2', _0: 'margin', _1: '100px 300px'},
				_1: {
					ctor: '::',
					_0: {ctor: '_Tuple2', _0: 'color', _1: '#03a9f4'},
					_1: {ctor: '[]'}
				}
			}),
		_1: {ctor: '[]'}
	},
	{
		ctor: '::',
		_0: _elm_lang$html$Html$text('Page Not Found! '),
		_1: {ctor: '[]'}
	});
var _user$project$Views_MainViews$page = function (model) {
	var _p0 = model.route;
	switch (_p0.ctor) {
		case 'ChordsRoute':
			return _user$project$Views_Chords$chordsPage(model);
		case 'FretboardRoute':
			return _user$project$Views_Fretboard$fretboardPage(model);
		case 'ScalesRoute':
			return _user$project$Views_Scales$scalesPage(model);
		case 'HomeRoute':
			return _user$project$Views_Home$homePage(model);
		case 'StrummingRoute':
			return _user$project$Views_Strum$strummingPage(model);
		case 'FingerPickingRoute':
			return _user$project$Views_FingerPick$fingerPickingPage(model);
		default:
			return _user$project$Views_MainViews$notFoundPage;
	}
};
var _user$project$Views_MainViews$signature = function (bool) {
	return A2(
		_elm_lang$html$Html$div,
		{
			ctor: '::',
			_0: _user$project$Styles_MainStyles$navItemStyle(bool),
			_1: {
				ctor: '::',
				_0: _user$project$Styles_MainStyles$signatureStyle,
				_1: {ctor: '[]'}
			}
		},
		{
			ctor: '::',
			_0: A4(
				_jinjor$elm_inline_hover$InlineHover$hover,
				_user$project$Styles_MainStyles$highlight,
				_elm_lang$html$Html$a,
				{
					ctor: '::',
					_0: _elm_lang$html$Html_Attributes$href('https://www.github.com/fedreg'),
					_1: {
						ctor: '::',
						_0: _elm_lang$html$Html_Attributes$style(
							{
								ctor: '::',
								_0: {ctor: '_Tuple2', _0: 'color', _1: '#666'},
								_1: {ctor: '[]'}
							}),
						_1: {ctor: '[]'}
					}
				},
				{
					ctor: '::',
					_0: _elm_lang$html$Html$text('c. 2017 FedReg (v. 0.1)'),
					_1: {ctor: '[]'}
				}),
			_1: {ctor: '[]'}
		});
};
var _user$project$Views_MainViews$keyListView = function (model) {
	var keyOptions = function (key) {
		return _elm_lang$core$Native_Utils.eq(key, model.musKey) ? A2(
			_elm_lang$html$Html$span,
			{
				ctor: '::',
				_0: _user$project$Styles_MainStyles$keyListStyle,
				_1: {
					ctor: '::',
					_0: _elm_lang$html$Html_Events$onClick(
						_user$project$Logic_Types$ChangeKey(key)),
					_1: {
						ctor: '::',
						_0: _elm_lang$html$Html_Attributes$style(
							{
								ctor: '::',
								_0: {ctor: '_Tuple2', _0: 'border', _1: '1px solid #03a9f4'},
								_1: {
									ctor: '::',
									_0: {ctor: '_Tuple2', _0: 'color', _1: '#03a9f4'},
									_1: {ctor: '[]'}
								}
							}),
						_1: {ctor: '[]'}
					}
				}
			},
			{
				ctor: '::',
				_0: _elm_lang$html$Html$text(key),
				_1: {ctor: '[]'}
			}) : A2(
			_elm_lang$html$Html$span,
			{
				ctor: '::',
				_0: _user$project$Styles_MainStyles$keyListStyle,
				_1: {
					ctor: '::',
					_0: _elm_lang$html$Html_Events$onClick(
						_user$project$Logic_Types$ChangeKey(key)),
					_1: {
						ctor: '::',
						_0: _elm_lang$html$Html_Attributes$style(
							{
								ctor: '::',
								_0: {ctor: '_Tuple2', _0: 'border', _1: '1px solid #333'},
								_1: {
									ctor: '::',
									_0: {ctor: '_Tuple2', _0: 'color', _1: '#fff'},
									_1: {ctor: '[]'}
								}
							}),
						_1: {ctor: '[]'}
					}
				}
			},
			{
				ctor: '::',
				_0: _elm_lang$html$Html$text(key),
				_1: {ctor: '[]'}
			});
	};
	return A2(
		_elm_lang$html$Html$div,
		{
			ctor: '::',
			_0: _user$project$Styles_MainStyles$keyListContainerStyle(model.navMenuOpen),
			_1: {ctor: '[]'}
		},
		{
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$h3,
				{
					ctor: '::',
					_0: _user$project$Styles_MainStyles$keyListKeyTitleStyle,
					_1: {ctor: '[]'}
				},
				{
					ctor: '::',
					_0: _elm_lang$html$Html$text('SELECT KEY'),
					_1: {ctor: '[]'}
				}),
			_1: {
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$div,
					{
						ctor: '::',
						_0: _user$project$Styles_MainStyles$textContainerStyle,
						_1: {ctor: '[]'}
					},
					A2(_elm_lang$core$List$map, keyOptions, _user$project$Views_Chords$keyListMajor)),
				_1: {
					ctor: '::',
					_0: A2(
						_elm_lang$html$Html$div,
						{
							ctor: '::',
							_0: _user$project$Styles_MainStyles$textContainerStyle,
							_1: {ctor: '[]'}
						},
						A2(_elm_lang$core$List$map, keyOptions, _user$project$Views_Chords$keyListMinor)),
					_1: {ctor: '[]'}
				}
			}
		});
};
var _user$project$Views_MainViews$navIcon = function (model) {
	return A2(
		_elm_lang$html$Html$div,
		{
			ctor: '::',
			_0: _user$project$Styles_MainStyles$navIconStyle(model),
			_1: {
				ctor: '::',
				_0: _elm_lang$html$Html_Events$onClick(_user$project$Logic_Types$ShowNavMenu),
				_1: {ctor: '[]'}
			}
		},
		{
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$hr,
				{
					ctor: '::',
					_0: _user$project$Styles_MainStyles$navIconStyleHr(model.navMenuOpen),
					_1: {ctor: '[]'}
				},
				{ctor: '[]'}),
			_1: {
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$hr,
					{
						ctor: '::',
						_0: _user$project$Styles_MainStyles$navIconStyleHr(model.navMenuOpen),
						_1: {ctor: '[]'}
					},
					{ctor: '[]'}),
				_1: {
					ctor: '::',
					_0: A2(
						_elm_lang$html$Html$hr,
						{
							ctor: '::',
							_0: _user$project$Styles_MainStyles$navIconStyleHr(model.navMenuOpen),
							_1: {ctor: '[]'}
						},
						{ctor: '[]'}),
					_1: {ctor: '[]'}
				}
			}
		});
};
var _user$project$Views_MainViews$pathList = function (model) {
	return {
		ctor: '::',
		_0: _user$project$Logic_Routing$homePath,
		_1: {
			ctor: '::',
			_0: _user$project$Logic_Routing$chordsPath(model.musKey),
			_1: {
				ctor: '::',
				_0: _user$project$Logic_Routing$scalesPath(model.musKey),
				_1: {
					ctor: '::',
					_0: _user$project$Logic_Routing$fretboardPath(model.musKey),
					_1: {
						ctor: '::',
						_0: _user$project$Logic_Routing$strummingPath,
						_1: {
							ctor: '::',
							_0: _user$project$Logic_Routing$fingerPickingPath,
							_1: {ctor: '[]'}
						}
					}
				}
			}
		}
	};
};
var _user$project$Views_MainViews$pageList = {
	ctor: '::',
	_0: 'HOME',
	_1: {
		ctor: '::',
		_0: 'CHORDS',
		_1: {
			ctor: '::',
			_0: 'SCALES',
			_1: {
				ctor: '::',
				_0: 'FRETBOARD',
				_1: {
					ctor: '::',
					_0: 'STRUMMING',
					_1: {
						ctor: '::',
						_0: 'FINGERPICKING',
						_1: {ctor: '[]'}
					}
				}
			}
		}
	}
};
var _user$project$Views_MainViews$nav = function (model) {
	var navItem = F2(
		function (rte, page) {
			return _elm_lang$core$Native_Utils.eq(
				A2(
					_elm_lang$core$String$startsWith,
					page,
					_elm_lang$core$String$toUpper(
						_elm_lang$core$Basics$toString(model.route))),
				true) ? A2(
				_elm_lang$html$Html$a,
				{
					ctor: '::',
					_0: _elm_lang$html$Html_Events$onClick(
						_user$project$Logic_Types$NewUrl(rte)),
					_1: {
						ctor: '::',
						_0: _user$project$Styles_MainStyles$navItemStyle(model.navMenuOpen),
						_1: {
							ctor: '::',
							_0: _elm_lang$html$Html_Attributes$style(
								{
									ctor: '::',
									_0: {ctor: '_Tuple2', _0: 'color', _1: '#03a9f4'},
									_1: {ctor: '[]'}
								}),
							_1: {ctor: '[]'}
						}
					}
				},
				{
					ctor: '::',
					_0: _elm_lang$html$Html$text(page),
					_1: {ctor: '[]'}
				}) : A2(
				_elm_lang$html$Html$a,
				{
					ctor: '::',
					_0: _elm_lang$html$Html_Events$onClick(
						_user$project$Logic_Types$NewUrl(rte)),
					_1: {
						ctor: '::',
						_0: _user$project$Styles_MainStyles$navItemStyle(model.navMenuOpen),
						_1: {ctor: '[]'}
					}
				},
				{
					ctor: '::',
					_0: _elm_lang$html$Html$text(page),
					_1: {ctor: '[]'}
				});
		});
	return A2(
		_elm_lang$html$Html$div,
		{
			ctor: '::',
			_0: _user$project$Styles_MainStyles$navMenuStyle(model),
			_1: {ctor: '[]'}
		},
		{
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$div,
				{
					ctor: '::',
					_0: _user$project$Styles_MainStyles$navTitleStyle,
					_1: {ctor: '[]'}
				},
				{
					ctor: '::',
					_0: _elm_lang$html$Html$text('Fret Theory'),
					_1: {ctor: '[]'}
				}),
			_1: {
				ctor: '::',
				_0: _user$project$Views_MainViews$navIcon(model),
				_1: {
					ctor: '::',
					_0: _user$project$Views_Modal$modalIcon(model),
					_1: {
						ctor: '::',
						_0: A2(
							_elm_lang$html$Html$div,
							{ctor: '[]'},
							A3(
								_elm_lang$core$List$map2,
								navItem,
								_user$project$Views_MainViews$pathList(model),
								_user$project$Views_MainViews$pageList)),
						_1: {
							ctor: '::',
							_0: _user$project$Views_MainViews$playbackSpeedSlider(model),
							_1: {
								ctor: '::',
								_0: A2(
									_elm_lang$html$Html$div,
									{
										ctor: '::',
										_0: _elm_lang$html$Html_Attributes$style(
											{
												ctor: '::',
												_0: {ctor: '_Tuple2', _0: 'position', _1: 'relative'},
												_1: {ctor: '[]'}
											}),
										_1: {ctor: '[]'}
									},
									{
										ctor: '::',
										_0: _user$project$Views_MainViews$keyListView(model),
										_1: {ctor: '[]'}
									}),
								_1: {
									ctor: '::',
									_0: _user$project$Views_MainViews$signature(model.navMenuOpen),
									_1: {ctor: '[]'}
								}
							}
						}
					}
				}
			}
		});
};
var _user$project$Views_MainViews$mainView = function (model) {
	return A2(
		_elm_lang$html$Html$div,
		{
			ctor: '::',
			_0: _elm_lang$html$Html_Attributes$style(
				{
					ctor: '::',
					_0: {ctor: '_Tuple2', _0: 'position', _1: 'relative'},
					_1: {
						ctor: '::',
						_0: {ctor: '_Tuple2', _0: 'overflow', _1: 'hidden'},
						_1: {
							ctor: '::',
							_0: {ctor: '_Tuple2', _0: 'padding', _1: '5px'},
							_1: {ctor: '[]'}
						}
					}
				}),
			_1: {ctor: '[]'}
		},
		{
			ctor: '::',
			_0: _user$project$Views_MainViews$nav(model),
			_1: {
				ctor: '::',
				_0: _user$project$Views_MainViews$page(model),
				_1: {
					ctor: '::',
					_0: _user$project$Views_Modal$modal(model),
					_1: {ctor: '[]'}
				}
			}
		});
};
